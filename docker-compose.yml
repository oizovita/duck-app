version: '2.4'

volumes:
    pgdata:
        driver: local
    redis_data:
        driver: local

services:

    nginx:
        container_name: duck-nginx
        image: nginx:alpine
        restart: unless-stopped
        tty: true
        environment:
            - MODE=nginx
        ports:
            - "${FORWARD_NGINX_PORT:-80}:80"
        volumes:
            - ./:/var/www/html/laravelapp:rw
            - ./.docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - duck_net
        logging:
            driver: "json-file"
            options:
                max-size: "10M"
                max-file: "5"
        healthcheck:
            test: [ "CMD", "/bin/bash", "docker-healthcheck.sh" ]
            interval: 60s
            timeout: 10s
            start_period: 60s
            retries: 3
        depends_on:
            - backend

    backend:
        container_name: duck-backend
        build:
            context: .
            dockerfile: ./Dockerfile
        volumes:
            - ./:/var/www/html/laravelapp:rw
            - ./docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:rw
        env_file:
            - .env
        environment:
            - MODE=backend
            - ENVIRONMENT=${ENVIRONMENT:-DEVELOPMENT}
        restart: unless-stopped
        networks:
            - duck_net
        logging:
            driver: "json-file"
            options:
                max-size: "10M"
                max-file: "5"
        healthcheck:
            test: [ "CMD", "/bin/bash", "docker-healthcheck.sh" ]
            interval: 60s
            timeout: 10s
            start_period: 60s
            retries: 3
        depends_on:
            - db
            - redis

    soketi:
        container_name: duck-soketi
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            DEBUG: ${SOKETI_DEBUG:-1}
            METRICS_SERVER_PORT: ${SOKETI_METRICS_SERVER_PORT:-9601}
            SOKETI_DB_REDIS_HOST: ${REDIS_HOST:-127.0.0.1}
            SOKETI_DB_REDIS_PORT: ${REDIS_PORT:-6379}
        networks:
            - duck_net
        logging:
            driver: "json-file"
            options:
                max-size: "10M"
                max-file: "5"

    db:
        container_name: duck-db
        image: postgres:12
        environment:
            - POSTGRES_PASSWORD=${DB_PASSWORD:-123456}
            - POSTGRES_USER=${DB_USERNAME:-user}
            - POSTGRES_DB=${DB_DATABASE:-forge}
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        volumes:
            - pgdata:/var/lib/postgresql/data
        restart: unless-stopped
        networks:
            - duck_net
        logging:
            driver: "json-file"
            options:
                max-size: "10M"
                max-file: "5"

    redis:
        container_name: duck-redis
        command: redis-server --appendonly yes
        image: 'redis:5'
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        restart: unless-stopped
        volumes:
            - redis_data:/data
        networks:
            - duck_net
        logging:
            driver: "json-file"
            options:
                max-size: "10M"
                max-file: "5"

    horizon:
        command: horizon
        build:
            context: .
            dockerfile: ./Dockerfile
        env_file:
            - .env
        environment:
            - DB_HOST=${DB_HOST:-db}
            - DB_PORT=${DB_PORT:-5432}
            - DB_DATABASE=${DB_DATABASE:-postgres}
            - DB_USERNAME=${DB_USERNAME:-postgres}
            - DB_PASSWORD=${DB_PASSWORD:-postgres}
            - REDIS_HOST=redis
            - REDIS_PASSWORD=null
            - REDIS_PORT=6379
            - MODE=horizon
            - ENVIRONMENT=DEVELOPMENT
        volumes:
            - ./:/var/www/html/laravelapp:rw
            - ./docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh:rw
        restart: unless-stopped
        networks:
            - duck_net
        logging:
            driver: "json-file"
            options:
                max-size: "10M"
                max-file: "5"
        healthcheck:
            test: [ "CMD", "/bin/bash", "docker-healthcheck.sh" ]
            interval: 60s
            timeout: 10s
            start_period: 60s
            retries: 3
        stop_signal: SIGTERM

networks:
    duck_net:
        name: duck_net
        driver: bridge
        internal: false
